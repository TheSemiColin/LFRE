#include <Servo.h>
//pt1_data -> A5 -> 500 psi
//pt2_data -> A2 -> 500 psi
//pt3_data -> A0 -> 300 psi
//servo motor used for testing
Servo servo1;
Servo servo2;
Servo servo3;
//initializzing i/o pins
//digital
int valve1 = 2;
int valve2 = 4;
int valve3 = 7;

char input;
char input1;
//analog pins
double pt1_data = A5;
double pt2_data = A2;
double pt3_data = A0;

int data =0;
int perc = 0;
int cap = 1023;
int  read_delay =   2;
int start = 0;
int calibration_read = 0;

//Presure Transducer 1 Variables
//Max Pressure of the pressure transducer
int Pmax_pt1 = 500;
//Minimum voltage output in Volts of the pressure transducer
float V01 = 0.0;
//Maximum voltage output in Volts of the pressure transducer
float Vmax1 = 5.0;
//initialize sum for pressure smoothing
float pres_sum1 = 0;
//Define the offset in psi from the calibration code
float offset1 = 0;
//how many samples you want to take for each pressure output
int pres_samples1 = 100;
float sum1 = 0;
/////////////////////////////////////////////
int samples1 = 10000;
/////////////////////////////////////////////
//Presure Transducer 2 Variables
//Arduino analog pin number
//Max Pressure of the pressure transducer
int Pmax_pt2 = 500;
//Minimum voltage output in Volts of the pressure transducer
float V02 = 0.0;
//Maximum voltage output in Volts of the pressure transducer
float Vmax2 = 5.0;
//initialize sum for pressure smoothing
float pres_sum2 = 0;
//Define the offset in psi from the calibration code
float offset2 = 0; // originally 16.03
//how many samples you want to take for each pressure output
int pres_samples2 = 100;
float sum2 = 0;

///////////////////////////////////////////////
//Arduino analog pin number
//Max Pressure of the pressure transducer
int Pmax_pt3 = 300;
//Resistance in ohms (in series)
float R3 = 244;
//Minimum current output in Amps of the pressure transducer
float I03 = 0.004;
//Maximum current output in Amps of the pressure transducer
float Imax3 = 0.02;
//initialize sum for pressure smoothing
float pres_sum3 = 0;
//Define the offset from the calibration code
float offset3 = 0;
//how many samples you want to take for each pressure output
int pres_samples3 = 100;
float sum3 = 0;
void setup() {
  // initialize digital pin LED_BUILTIN as an output.
  pinMode(pt1_data,INPUT);
  pinMode(pt2_data,INPUT);
  pinMode(pt3_data,INPUT);
  Serial.begin(115200);
  pinMode(valve1,OUTPUT);
  pinMode(valve2,OUTPUT);
  servo3.attach(valve3); // replaced with igniter

  // Pressure Transducer Calibration Code
  for (int i = 0; i <= samples1; i++) {
  //read the raw data coming in on analog pin 0
  float RawVoltage1 = analogRead(pt1_data); // 500
  float RawVoltage2 = analogRead(pt2_data); // 500
  //Serial.println(RawVoltage);
  // Convert the raw data value (0 - 1023) to voltage (0.0V - 5.0V)
  float Vread1 = RawVoltage1 * (5.0 / 1024.0);
  float Vread2 = RawVoltage2 * (5.0 / 1024.0);
  //Serial.println(Vread);
  //Convert voltage read to gauge pressure in psi and store in an array
  float pressure1 = Pmax_pt1*((Vread1-V01)/(Vmax1-V01));
  float pressure2 = Pmax_pt2*((Vread2-V02)/(Vmax2-V02));
  //Create the sum of sample pressures 
  sum1 = sum1 + pressure1;
  sum2 = sum2 + pressure2;
  
  //Serial.println(sum);
  }
  //Calculate the average pressure
  float avg_pressure1 = sum1 / samples1;
  float avg_pressure2 = sum2 / samples1;
  //Calculate the offset pressure in psi to ambientize and make absolute
  offset1 = 14.7 - avg_pressure1;
  offset2 = 14.7 - avg_pressure2;

  //Current Pressure Transducer Calibration
  for (int i = 0; i <= samples1; i++) {
  //read the raw data coming in on analog pin 0
  float RawVoltage3 = analogRead(pt3_data);
  // Convert the raw data value (0 - 1023) to voltage (0.0V - 5.0V)
  float Vread3 = RawVoltage3 * (5.0 / 1024.0);
  //Convert voltage read to gauge pressure in psi and store in an array
  float pressure3 = (Pmax_pt3*(Vread3-(I03*R3)))/(R3*(Imax3-I03));
  //Create the sum of sample pressures
  sum3 = sum3 + pressure3;
  }
  //Calculate the average pressure
  float avg_pressure3 = sum3 / samples1;
  //Calculate the offset pressure to ambientize and make absolute
  float offset3 = 14.7 - avg_pressure3;
}

// the loop function runs over and over again forever
void loop() {
   //Checks if input buffer has stuff so that it doestn read randomly
   if(Serial.available() > 0){  
    
      delay(100);
      input = Serial.read();
      //delay(1000);
      //Serial.println(input);
      //1 is sent by Python
      if(input == '1'){
        digitalWrite(valve1,HIGH);  
      }else if(input == '4'){
        digitalWrite(valve1,LOW); 
       //2 is sent by Python
      }else if (input == '2'){
        digitalWrite(valve2,HIGH);
      }else if (input == '5'){
        digitalWrite(valve2,LOW); 
      //3 is sent by Python
      }else if(input == '3'){
        servo3.write(180);
      }else if(input == '6'){
        servo3.write(-180); 
      }else if(input == '9'){
        start = 1;
      }else if(input == '7'){
       //digitalWrite(D7,LOW);
      }
   }
   

  if(start == 1){
      //Arduino analog pin number
    for (int i = 0; i < pres_samples1; i++) {
    //read the raw data coming in on analog pin 0
    float RawVoltage1 = analogRead(pt1_data);
    float RawVoltage2 = analogRead(pt2_data);
    float RawVoltage3 = analogRead(pt3_data);
    //Serial.println(RawVoltage);
    // Convert the raw data value (0 - 1023) to voltage (0.0V - 5.0V)
    float Vread1 = RawVoltage1 * (5.0 / 1024.0);
    float Vread2 = RawVoltage2 * (5.0 / 1024.0);
    float Vread3 = RawVoltage3 * (5.0 / 1024.0);
    //Convert voltage read to gauge pressure in psi and store in an array
    float pressure1 = Pmax_pt1*((Vread1-V01)/(Vmax1-V01));
    float pressure2 = Pmax_pt2*((Vread2-V02)/(Vmax2-V02));
    float pressure3 = (Pmax_pt3*(Vread3-(I03*R3)))/(R3*(Imax3-I03));
    
    //Create the sum of sample pressures 
    pres_sum1 = pres_sum1 + pressure1;
    pres_sum2 = pres_sum2 + pressure2;
    pres_sum3 = pres_sum3 + pressure3;
  }
  //Calculate the average pressure and calibrate
  float avg_pressure1 = pres_sum1 / pres_samples1;
  pres_sum1 = 0;
  float avg_pressure2 = pres_sum2 / pres_samples2;
  pres_sum2 = 0;
  float avg_pressure3 = pres_sum3 / pres_samples3;
  pres_sum3 = 0;
  //Calibrate pressure and change to absolute
  float abs_pressure_cal1 = avg_pressure1 + offset1;
  float abs_pressure_cal2 = avg_pressure2 + offset2;
  float abs_pressure_cal3 = avg_pressure3 + offset3;
  // write the pressure value to the serial monitor:
  //Serial.println((int)abs_pressure_cal1);
  //delay(500);
      
      // reading 3 pressure transducers
      //Serial.println(analogRead(pt1_data));
      //delay is needed but we should see if it can be synced
      delayMicroseconds(read_delay);
      Serial.println((int)abs_pressure_cal1);
      delayMicroseconds(read_delay);
      Serial.println((int)abs_pressure_cal2);
      delayMicroseconds(read_delay);
      Serial.println((int)abs_pressure_cal3);
      delayMicroseconds(read_delay);
      
  }
}
